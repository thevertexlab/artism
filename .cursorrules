!!重要!! 
# - 【暂时禁用，让用户需要的时候手动 at 】！！执行任何命令前，必须先阅读 gptmemory/project_memo.md ！！并严格按照其中要求执行，如果参考文件包含 [user]_working_memory.md 也要先！！阅读和修改 working_memory 文件！！记录当前工作，阅读完这俩再开始其他的思考和回答
# - 下一行是你要先输出的提示语，以表示你遵守了 memo 和 memory 规则，其中 [] 都按实际情况决定输出，多个 / 只输出符合情况的那一个，且不输出外围的[]符号，例如：`即将重新阅读memo，本次操作按照 project_memo 要求执行。这是似乎是一个需要多个步骤的长期任务，您是否忘记 @ working memory 文件？`这只是示例，按照上一行提供的选项根据当前实际情况决定如何输出！
# - 这是输出规则，！！在你的回答最前面先按实际情况输出！！：`[即将重新阅读memo/memo内容仍完整在记忆中]，本次操作按照 project_memo 要求执行。[这个任务是短期任务，不会被记录进 working memory。/这是似乎是一个需要多个步骤的长期任务，您是否忘记 @ working memory 文件？/发现一个参考的 working memory 文件，当前任务进度将会被记录和更新。]`
- ！！必须遵循 git commit 提交信息格式！！优先使用中文，专业术语或者模块或者文件名或者保留字保持原来的英文
```
<类型>(<范围>): <非常有区分性和代表性但是不过长的描述>
- 改动1
- 改动2
...（1-4点）
```
- git commit 类型包括✨feat/🐛fix/📚docs/💄style/♻️refactor/⚡perf/✅test/🔧chore；详细规范见docs/dev/getting-started.md，一定要用正确的 emoji 和类型：
    - **✨feat**: 新功能
    - **🐛fix**: 错误修复
    - **📚docs**: 文档变更
    - **💄style**: 不影响代码功能的样式变更
    - **♻️refactor**: 既不修复错误也不添加功能的代码变更
    - **⚡perf**: 提高性能的代码变更
    - **✅test**: 添加或修改测试
    - **🔧chore**: 构建过程或辅助工具变动
- 我们的 tempo_app 基于 flutter 开发，但是已经废弃，且要同时支持 Web > iOS > Andoird > macOS （优先级），很多设计要考虑多端兼容性或者分情况处理
- 我们的 web 基于 capactitor 开发，是目前的活跃前端，支持优先级 iOS = Android > Web > macOS > Windows > Linux，很多设计要考虑多端兼容性或者分情况处理， UI 以 tailwindcss 为主，只有必要情况下例如手写很麻烦采用 chakra-ui 组件补充，别滥用尤其是别用 Box 或者 VStack 这些 chakra 的布局元素，都用 tailwind 直接写， chakra 只在必要情况下用组件不允许滥用
- 如果你在修复一个 sentry Issue, 请在 commit 信息中包含类似 Fixes TEMPO-WEB-12 这种标记

不要停

你继续正常的任务，如果出现了各种原因的停止ai对话，你自行给我修复

如果你觉得差不多了，你就开始测试程序，能不能跑得起来。

@scraperTest.md，用这个文件里面的网站进行测试

如果我的命令执行超过60秒没有响应，你就取消当前命令并尝试其他方法。
如果我的命令执行超过60秒没有响应，你就取消当前命令并尝试其他方法。
在每次执行命令前，评估该命令可能的执行时间。
对于可能耗时较长的命令，建议使用command_timeout.ps1脚本执行。
如果命令执行时间超过60秒，请自动终止并提示我使用替代方案。
对于Windows环境，避免使用Unix风格命令，改用PowerShell兼容命令。

只要我没有让你停止，你就不断的尝试程序，然后去修复bug。保证最终能够完整的流畅的运行起来。一个一个功能去检查bug。


你要自己在阶段性的进行git。